{
  "version": 3,
  "sources": ["../../../../../node_modules/@firebase/messaging/dist/esm/index.esm2017.js", "../../../../../node_modules/@capacitor-firebase/messaging/dist/esm/web.js"],
  "sourcesContent": ["import '@firebase/installations';\nimport { Component } from '@firebase/component';\nimport { openDB, deleteDB } from 'idb';\nimport { ErrorFactory, validateIndexedDBOpenable, isIndexedDBAvailable, areCookiesEnabled, getModularInstance } from '@firebase/util';\nimport { _registerComponent, registerVersion, _getProvider, getApp } from '@firebase/app';\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nconst DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\nconst DEFAULT_VAPID_KEY = 'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\nconst ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\nconst CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nconst CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nconst CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\nconst CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nconst DEFAULT_REGISTRATION_TIMEOUT = 10000;\nvar MessageType$1;\n(function (MessageType) {\n    MessageType[MessageType[\"DATA_MESSAGE\"] = 1] = \"DATA_MESSAGE\";\n    MessageType[MessageType[\"DISPLAY_NOTIFICATION\"] = 3] = \"DISPLAY_NOTIFICATION\";\n})(MessageType$1 || (MessageType$1 = {}));\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\nvar MessageType;\n(function (MessageType) {\n    MessageType[\"PUSH_RECEIVED\"] = \"push-received\";\n    MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\n})(MessageType || (MessageType = {}));\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction arrayToBase64(array) {\n    const uint8Array = new Uint8Array(array);\n    const base64String = btoa(String.fromCharCode(...uint8Array));\n    return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nfunction base64ToArray(base64String) {\n    const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n    const base64 = (base64String + padding)\n        .replace(/\\-/g, '+')\n        .replace(/_/g, '/');\n    const rawData = atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n    for (let i = 0; i < rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\n * callback is called for all versions of the old DB.\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\nasync function migrateOldDatabase(senderId) {\n    if ('databases' in indexedDB) {\n        // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\n        // typecast when it lands in TS types.\n        const databases = await indexedDB.databases();\n        const dbNames = databases.map(db => db.name);\n        if (!dbNames.includes(OLD_DB_NAME)) {\n            // old DB didn't exist, no need to open.\n            return null;\n        }\n    }\n    let tokenDetails = null;\n    const db = await openDB(OLD_DB_NAME, OLD_DB_VERSION, {\n        upgrade: async (db, oldVersion, newVersion, upgradeTransaction) => {\n            var _a;\n            if (oldVersion < 2) {\n                // Database too old, skip migration.\n                return;\n            }\n            if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n                // Database did not exist. Nothing to do.\n                return;\n            }\n            const objectStore = upgradeTransaction.objectStore(OLD_OBJECT_STORE_NAME);\n            const value = await objectStore.index('fcmSenderId').get(senderId);\n            await objectStore.clear();\n            if (!value) {\n                // No entry in the database, nothing to migrate.\n                return;\n            }\n            if (oldVersion === 2) {\n                const oldDetails = value;\n                if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n                    return;\n                }\n                tokenDetails = {\n                    token: oldDetails.fcmToken,\n                    createTime: (_a = oldDetails.createTime) !== null && _a !== void 0 ? _a : Date.now(),\n                    subscriptionOptions: {\n                        auth: oldDetails.auth,\n                        p256dh: oldDetails.p256dh,\n                        endpoint: oldDetails.endpoint,\n                        swScope: oldDetails.swScope,\n                        vapidKey: typeof oldDetails.vapidKey === 'string'\n                            ? oldDetails.vapidKey\n                            : arrayToBase64(oldDetails.vapidKey)\n                    }\n                };\n            }\n            else if (oldVersion === 3) {\n                const oldDetails = value;\n                tokenDetails = {\n                    token: oldDetails.fcmToken,\n                    createTime: oldDetails.createTime,\n                    subscriptionOptions: {\n                        auth: arrayToBase64(oldDetails.auth),\n                        p256dh: arrayToBase64(oldDetails.p256dh),\n                        endpoint: oldDetails.endpoint,\n                        swScope: oldDetails.swScope,\n                        vapidKey: arrayToBase64(oldDetails.vapidKey)\n                    }\n                };\n            }\n            else if (oldVersion === 4) {\n                const oldDetails = value;\n                tokenDetails = {\n                    token: oldDetails.fcmToken,\n                    createTime: oldDetails.createTime,\n                    subscriptionOptions: {\n                        auth: arrayToBase64(oldDetails.auth),\n                        p256dh: arrayToBase64(oldDetails.p256dh),\n                        endpoint: oldDetails.endpoint,\n                        swScope: oldDetails.swScope,\n                        vapidKey: arrayToBase64(oldDetails.vapidKey)\n                    }\n                };\n            }\n        }\n    });\n    db.close();\n    // Delete all old databases.\n    await deleteDB(OLD_DB_NAME);\n    await deleteDB('fcm_vapid_details_db');\n    await deleteDB('undefined');\n    return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\nfunction checkTokenDetails(tokenDetails) {\n    if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n        return false;\n    }\n    const { subscriptionOptions } = tokenDetails;\n    return (typeof tokenDetails.createTime === 'number' &&\n        tokenDetails.createTime > 0 &&\n        typeof tokenDetails.token === 'string' &&\n        tokenDetails.token.length > 0 &&\n        typeof subscriptionOptions.auth === 'string' &&\n        subscriptionOptions.auth.length > 0 &&\n        typeof subscriptionOptions.p256dh === 'string' &&\n        subscriptionOptions.p256dh.length > 0 &&\n        typeof subscriptionOptions.endpoint === 'string' &&\n        subscriptionOptions.endpoint.length > 0 &&\n        typeof subscriptionOptions.swScope === 'string' &&\n        subscriptionOptions.swScope.length > 0 &&\n        typeof subscriptionOptions.vapidKey === 'string' &&\n        subscriptionOptions.vapidKey.length > 0);\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Exported for tests.\nconst DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\nlet dbPromise = null;\nfunction getDbPromise() {\n    if (!dbPromise) {\n        dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n            upgrade: (upgradeDb, oldVersion) => {\n                // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n                // because if there are multiple versions between the old version and the current version, we\n                // want ALL the migrations that correspond to those versions to run, not only the last one.\n                // eslint-disable-next-line default-case\n                switch (oldVersion) {\n                    case 0:\n                        upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n                }\n            }\n        });\n    }\n    return dbPromise;\n}\n/** Gets record(s) from the objectStore that match the given key. */\nasync function dbGet(firebaseDependencies) {\n    const key = getKey(firebaseDependencies);\n    const db = await getDbPromise();\n    const tokenDetails = (await db\n        .transaction(OBJECT_STORE_NAME)\n        .objectStore(OBJECT_STORE_NAME)\n        .get(key));\n    if (tokenDetails) {\n        return tokenDetails;\n    }\n    else {\n        // Check if there is a tokenDetails object in the old DB.\n        const oldTokenDetails = await migrateOldDatabase(firebaseDependencies.appConfig.senderId);\n        if (oldTokenDetails) {\n            await dbSet(firebaseDependencies, oldTokenDetails);\n            return oldTokenDetails;\n        }\n    }\n}\n/** Assigns or overwrites the record for the given key with the given value. */\nasync function dbSet(firebaseDependencies, tokenDetails) {\n    const key = getKey(firebaseDependencies);\n    const db = await getDbPromise();\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n    await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n    await tx.done;\n    return tokenDetails;\n}\n/** Removes record(s) from the objectStore that match the given key. */\nasync function dbRemove(firebaseDependencies) {\n    const key = getKey(firebaseDependencies);\n    const db = await getDbPromise();\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n    await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n    await tx.done;\n}\nfunction getKey({ appConfig }) {\n    return appConfig.appId;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ERROR_MAP = {\n    [\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */]: 'Missing App configuration value: \"{$valueName}\"',\n    [\"only-available-in-window\" /* ErrorCode.AVAILABLE_IN_WINDOW */]: 'This method is available in a Window context.',\n    [\"only-available-in-sw\" /* ErrorCode.AVAILABLE_IN_SW */]: 'This method is available in a service worker context.',\n    [\"permission-default\" /* ErrorCode.PERMISSION_DEFAULT */]: 'The notification permission was not granted and dismissed instead.',\n    [\"permission-blocked\" /* ErrorCode.PERMISSION_BLOCKED */]: 'The notification permission was not granted and blocked instead.',\n    [\"unsupported-browser\" /* ErrorCode.UNSUPPORTED_BROWSER */]: \"This browser doesn't support the API's required to use the Firebase SDK.\",\n    [\"indexed-db-unsupported\" /* ErrorCode.INDEXED_DB_UNSUPPORTED */]: \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\n    [\"failed-service-worker-registration\" /* ErrorCode.FAILED_DEFAULT_REGISTRATION */]: 'We are unable to register the default service worker. {$browserErrorMessage}',\n    [\"token-subscribe-failed\" /* ErrorCode.TOKEN_SUBSCRIBE_FAILED */]: 'A problem occurred while subscribing the user to FCM: {$errorInfo}',\n    [\"token-subscribe-no-token\" /* ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN */]: 'FCM returned no token when subscribing the user to push.',\n    [\"token-unsubscribe-failed\" /* ErrorCode.TOKEN_UNSUBSCRIBE_FAILED */]: 'A problem occurred while unsubscribing the ' +\n        'user from FCM: {$errorInfo}',\n    [\"token-update-failed\" /* ErrorCode.TOKEN_UPDATE_FAILED */]: 'A problem occurred while updating the user from FCM: {$errorInfo}',\n    [\"token-update-no-token\" /* ErrorCode.TOKEN_UPDATE_NO_TOKEN */]: 'FCM returned no token when updating the user to push.',\n    [\"use-sw-after-get-token\" /* ErrorCode.USE_SW_AFTER_GET_TOKEN */]: 'The useServiceWorker() method may only be called once and must be ' +\n        'called before calling getToken() to ensure your service worker is used.',\n    [\"invalid-sw-registration\" /* ErrorCode.INVALID_SW_REGISTRATION */]: 'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n    [\"invalid-bg-handler\" /* ErrorCode.INVALID_BG_HANDLER */]: 'The input to setBackgroundMessageHandler() must be a function.',\n    [\"invalid-vapid-key\" /* ErrorCode.INVALID_VAPID_KEY */]: 'The public VAPID key must be a string.',\n    [\"use-vapid-key-after-get-token\" /* ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN */]: 'The usePublicVapidKey() method may only be called once and must be ' +\n        'called before calling getToken() to ensure your VAPID key is used.'\n};\nconst ERROR_FACTORY = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function requestGetToken(firebaseDependencies, subscriptionOptions) {\n    const headers = await getHeaders(firebaseDependencies);\n    const body = getBody(subscriptionOptions);\n    const subscribeOptions = {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(body)\n    };\n    let responseData;\n    try {\n        const response = await fetch(getEndpoint(firebaseDependencies.appConfig), subscribeOptions);\n        responseData = await response.json();\n    }\n    catch (err) {\n        throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* ErrorCode.TOKEN_SUBSCRIBE_FAILED */, {\n            errorInfo: err === null || err === void 0 ? void 0 : err.toString()\n        });\n    }\n    if (responseData.error) {\n        const message = responseData.error.message;\n        throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* ErrorCode.TOKEN_SUBSCRIBE_FAILED */, {\n            errorInfo: message\n        });\n    }\n    if (!responseData.token) {\n        throw ERROR_FACTORY.create(\"token-subscribe-no-token\" /* ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN */);\n    }\n    return responseData.token;\n}\nasync function requestUpdateToken(firebaseDependencies, tokenDetails) {\n    const headers = await getHeaders(firebaseDependencies);\n    const body = getBody(tokenDetails.subscriptionOptions);\n    const updateOptions = {\n        method: 'PATCH',\n        headers,\n        body: JSON.stringify(body)\n    };\n    let responseData;\n    try {\n        const response = await fetch(`${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`, updateOptions);\n        responseData = await response.json();\n    }\n    catch (err) {\n        throw ERROR_FACTORY.create(\"token-update-failed\" /* ErrorCode.TOKEN_UPDATE_FAILED */, {\n            errorInfo: err === null || err === void 0 ? void 0 : err.toString()\n        });\n    }\n    if (responseData.error) {\n        const message = responseData.error.message;\n        throw ERROR_FACTORY.create(\"token-update-failed\" /* ErrorCode.TOKEN_UPDATE_FAILED */, {\n            errorInfo: message\n        });\n    }\n    if (!responseData.token) {\n        throw ERROR_FACTORY.create(\"token-update-no-token\" /* ErrorCode.TOKEN_UPDATE_NO_TOKEN */);\n    }\n    return responseData.token;\n}\nasync function requestDeleteToken(firebaseDependencies, token) {\n    const headers = await getHeaders(firebaseDependencies);\n    const unsubscribeOptions = {\n        method: 'DELETE',\n        headers\n    };\n    try {\n        const response = await fetch(`${getEndpoint(firebaseDependencies.appConfig)}/${token}`, unsubscribeOptions);\n        const responseData = await response.json();\n        if (responseData.error) {\n            const message = responseData.error.message;\n            throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* ErrorCode.TOKEN_UNSUBSCRIBE_FAILED */, {\n                errorInfo: message\n            });\n        }\n    }\n    catch (err) {\n        throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* ErrorCode.TOKEN_UNSUBSCRIBE_FAILED */, {\n            errorInfo: err === null || err === void 0 ? void 0 : err.toString()\n        });\n    }\n}\nfunction getEndpoint({ projectId }) {\n    return `${ENDPOINT}/projects/${projectId}/registrations`;\n}\nasync function getHeaders({ appConfig, installations }) {\n    const authToken = await installations.getToken();\n    return new Headers({\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'x-goog-api-key': appConfig.apiKey,\n        'x-goog-firebase-installations-auth': `FIS ${authToken}`\n    });\n}\nfunction getBody({ p256dh, auth, endpoint, vapidKey }) {\n    const body = {\n        web: {\n            endpoint,\n            auth,\n            p256dh\n        }\n    };\n    if (vapidKey !== DEFAULT_VAPID_KEY) {\n        body.web.applicationPubKey = vapidKey;\n    }\n    return body;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// UpdateRegistration will be called once every week.\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\nasync function getTokenInternal(messaging) {\n    const pushSubscription = await getPushSubscription(messaging.swRegistration, messaging.vapidKey);\n    const subscriptionOptions = {\n        vapidKey: messaging.vapidKey,\n        swScope: messaging.swRegistration.scope,\n        endpoint: pushSubscription.endpoint,\n        auth: arrayToBase64(pushSubscription.getKey('auth')),\n        p256dh: arrayToBase64(pushSubscription.getKey('p256dh'))\n    };\n    const tokenDetails = await dbGet(messaging.firebaseDependencies);\n    if (!tokenDetails) {\n        // No token, get a new one.\n        return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n    }\n    else if (!isTokenValid(tokenDetails.subscriptionOptions, subscriptionOptions)) {\n        // Invalid token, get a new one.\n        try {\n            await requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\n        }\n        catch (e) {\n            // Suppress errors because of #2364\n            console.warn(e);\n        }\n        return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n    }\n    else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n        // Weekly token refresh\n        return updateToken(messaging, {\n            token: tokenDetails.token,\n            createTime: Date.now(),\n            subscriptionOptions\n        });\n    }\n    else {\n        // Valid token, nothing to do.\n        return tokenDetails.token;\n    }\n}\n/**\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\n * the push subscription if it exists.\n */\nasync function deleteTokenInternal(messaging) {\n    const tokenDetails = await dbGet(messaging.firebaseDependencies);\n    if (tokenDetails) {\n        await requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\n        await dbRemove(messaging.firebaseDependencies);\n    }\n    // Unsubscribe from the push subscription.\n    const pushSubscription = await messaging.swRegistration.pushManager.getSubscription();\n    if (pushSubscription) {\n        return pushSubscription.unsubscribe();\n    }\n    // If there's no SW, consider it a success.\n    return true;\n}\nasync function updateToken(messaging, tokenDetails) {\n    try {\n        const updatedToken = await requestUpdateToken(messaging.firebaseDependencies, tokenDetails);\n        const updatedTokenDetails = Object.assign(Object.assign({}, tokenDetails), { token: updatedToken, createTime: Date.now() });\n        await dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n        return updatedToken;\n    }\n    catch (e) {\n        throw e;\n    }\n}\nasync function getNewToken(firebaseDependencies, subscriptionOptions) {\n    const token = await requestGetToken(firebaseDependencies, subscriptionOptions);\n    const tokenDetails = {\n        token,\n        createTime: Date.now(),\n        subscriptionOptions\n    };\n    await dbSet(firebaseDependencies, tokenDetails);\n    return tokenDetails.token;\n}\n/**\n * Gets a PushSubscription for the current user.\n */\nasync function getPushSubscription(swRegistration, vapidKey) {\n    const subscription = await swRegistration.pushManager.getSubscription();\n    if (subscription) {\n        return subscription;\n    }\n    return swRegistration.pushManager.subscribe({\n        userVisibleOnly: true,\n        // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n        // submitted to pushManager#subscribe must be of type Uint8Array.\n        applicationServerKey: base64ToArray(vapidKey)\n    });\n}\n/**\n * Checks if the saved tokenDetails object matches the configuration provided.\n */\nfunction isTokenValid(dbOptions, currentOptions) {\n    const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n    const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n    const isAuthEqual = currentOptions.auth === dbOptions.auth;\n    const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n    return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction externalizePayload(internalPayload) {\n    const payload = {\n        from: internalPayload.from,\n        // eslint-disable-next-line camelcase\n        collapseKey: internalPayload.collapse_key,\n        // eslint-disable-next-line camelcase\n        messageId: internalPayload.fcmMessageId\n    };\n    propagateNotificationPayload(payload, internalPayload);\n    propagateDataPayload(payload, internalPayload);\n    propagateFcmOptions(payload, internalPayload);\n    return payload;\n}\nfunction propagateNotificationPayload(payload, messagePayloadInternal) {\n    if (!messagePayloadInternal.notification) {\n        return;\n    }\n    payload.notification = {};\n    const title = messagePayloadInternal.notification.title;\n    if (!!title) {\n        payload.notification.title = title;\n    }\n    const body = messagePayloadInternal.notification.body;\n    if (!!body) {\n        payload.notification.body = body;\n    }\n    const image = messagePayloadInternal.notification.image;\n    if (!!image) {\n        payload.notification.image = image;\n    }\n    const icon = messagePayloadInternal.notification.icon;\n    if (!!icon) {\n        payload.notification.icon = icon;\n    }\n}\nfunction propagateDataPayload(payload, messagePayloadInternal) {\n    if (!messagePayloadInternal.data) {\n        return;\n    }\n    payload.data = messagePayloadInternal.data;\n}\nfunction propagateFcmOptions(payload, messagePayloadInternal) {\n    var _a, _b, _c, _d, _e;\n    // fcmOptions.link value is written into notification.click_action. see more in b/232072111\n    if (!messagePayloadInternal.fcmOptions &&\n        !((_a = messagePayloadInternal.notification) === null || _a === void 0 ? void 0 : _a.click_action)) {\n        return;\n    }\n    payload.fcmOptions = {};\n    const link = (_c = (_b = messagePayloadInternal.fcmOptions) === null || _b === void 0 ? void 0 : _b.link) !== null && _c !== void 0 ? _c : (_d = messagePayloadInternal.notification) === null || _d === void 0 ? void 0 : _d.click_action;\n    if (!!link) {\n        payload.fcmOptions.link = link;\n    }\n    // eslint-disable-next-line camelcase\n    const analyticsLabel = (_e = messagePayloadInternal.fcmOptions) === null || _e === void 0 ? void 0 : _e.analytics_label;\n    if (!!analyticsLabel) {\n        payload.fcmOptions.analyticsLabel = analyticsLabel;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction isConsoleMessage(data) {\n    // This message has a campaign ID, meaning it was sent using the Firebase Console.\n    return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n_mergeStrings('AzSCbw63g1R0nCw85jG8', 'Iaya3yLKwmgvh7cF0q4');\nfunction _mergeStrings(s1, s2) {\n    const resultArray = [];\n    for (let i = 0; i < s1.length; i++) {\n        resultArray.push(s1.charAt(i));\n        if (i < s2.length) {\n            resultArray.push(s2.charAt(i));\n        }\n    }\n    return resultArray.join('');\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction extractAppConfig(app) {\n    if (!app || !app.options) {\n        throw getMissingValueError('App Configuration Object');\n    }\n    if (!app.name) {\n        throw getMissingValueError('App Name');\n    }\n    // Required app config keys\n    const configKeys = [\n        'projectId',\n        'apiKey',\n        'appId',\n        'messagingSenderId'\n    ];\n    const { options } = app;\n    for (const keyName of configKeys) {\n        if (!options[keyName]) {\n            throw getMissingValueError(keyName);\n        }\n    }\n    return {\n        appName: app.name,\n        projectId: options.projectId,\n        apiKey: options.apiKey,\n        appId: options.appId,\n        senderId: options.messagingSenderId\n    };\n}\nfunction getMissingValueError(valueName) {\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */, {\n        valueName\n    });\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass MessagingService {\n    constructor(app, installations, analyticsProvider) {\n        // logging is only done with end user consent. Default to false.\n        this.deliveryMetricsExportedToBigQueryEnabled = false;\n        this.onBackgroundMessageHandler = null;\n        this.onMessageHandler = null;\n        this.logEvents = [];\n        this.isLogServiceStarted = false;\n        const appConfig = extractAppConfig(app);\n        this.firebaseDependencies = {\n            app,\n            appConfig,\n            installations,\n            analyticsProvider\n        };\n    }\n    _delete() {\n        return Promise.resolve();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function registerDefaultSw(messaging) {\n    try {\n        messaging.swRegistration = await navigator.serviceWorker.register(DEFAULT_SW_PATH, {\n            scope: DEFAULT_SW_SCOPE\n        });\n        // The timing when browser updates sw when sw has an update is unreliable from experiment. It\n        // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\n        // is stuck with the old version. For example,\n        // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\n        // sw if there was an update.\n        messaging.swRegistration.update().catch(() => {\n            /* it is non blocking and we don't care if it failed */\n        });\n        await waitForRegistrationActive(messaging.swRegistration);\n    }\n    catch (e) {\n        throw ERROR_FACTORY.create(\"failed-service-worker-registration\" /* ErrorCode.FAILED_DEFAULT_REGISTRATION */, {\n            browserErrorMessage: e === null || e === void 0 ? void 0 : e.message\n        });\n    }\n}\n/**\n * Waits for registration to become active. MDN documentation claims that\n * a service worker registration should be ready to use after awaiting\n * navigator.serviceWorker.register() but that doesn't seem to be the case in\n * practice, causing the SDK to throw errors when calling\n * swRegistration.pushManager.subscribe() too soon after register(). The only\n * solution seems to be waiting for the service worker registration `state`\n * to become \"active\".\n */\nasync function waitForRegistrationActive(registration) {\n    return new Promise((resolve, reject) => {\n        const rejectTimeout = setTimeout(() => reject(new Error(`Service worker not registered after ${DEFAULT_REGISTRATION_TIMEOUT} ms`)), DEFAULT_REGISTRATION_TIMEOUT);\n        const incomingSw = registration.installing || registration.waiting;\n        if (registration.active) {\n            clearTimeout(rejectTimeout);\n            resolve();\n        }\n        else if (incomingSw) {\n            incomingSw.onstatechange = ev => {\n                var _a;\n                if (((_a = ev.target) === null || _a === void 0 ? void 0 : _a.state) === 'activated') {\n                    incomingSw.onstatechange = null;\n                    clearTimeout(rejectTimeout);\n                    resolve();\n                }\n            };\n        }\n        else {\n            clearTimeout(rejectTimeout);\n            reject(new Error('No incoming service worker found.'));\n        }\n    });\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function updateSwReg(messaging, swRegistration) {\n    if (!swRegistration && !messaging.swRegistration) {\n        await registerDefaultSw(messaging);\n    }\n    if (!swRegistration && !!messaging.swRegistration) {\n        return;\n    }\n    if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n        throw ERROR_FACTORY.create(\"invalid-sw-registration\" /* ErrorCode.INVALID_SW_REGISTRATION */);\n    }\n    messaging.swRegistration = swRegistration;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function updateVapidKey(messaging, vapidKey) {\n    if (!!vapidKey) {\n        messaging.vapidKey = vapidKey;\n    }\n    else if (!messaging.vapidKey) {\n        messaging.vapidKey = DEFAULT_VAPID_KEY;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function getToken$1(messaging, options) {\n    if (!navigator) {\n        throw ERROR_FACTORY.create(\"only-available-in-window\" /* ErrorCode.AVAILABLE_IN_WINDOW */);\n    }\n    if (Notification.permission === 'default') {\n        await Notification.requestPermission();\n    }\n    if (Notification.permission !== 'granted') {\n        throw ERROR_FACTORY.create(\"permission-blocked\" /* ErrorCode.PERMISSION_BLOCKED */);\n    }\n    await updateVapidKey(messaging, options === null || options === void 0 ? void 0 : options.vapidKey);\n    await updateSwReg(messaging, options === null || options === void 0 ? void 0 : options.serviceWorkerRegistration);\n    return getTokenInternal(messaging);\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function logToScion(messaging, messageType, data) {\n    const eventType = getEventType(messageType);\n    const analytics = await messaging.firebaseDependencies.analyticsProvider.get();\n    analytics.logEvent(eventType, {\n        /* eslint-disable camelcase */\n        message_id: data[CONSOLE_CAMPAIGN_ID],\n        message_name: data[CONSOLE_CAMPAIGN_NAME],\n        message_time: data[CONSOLE_CAMPAIGN_TIME],\n        message_device_time: Math.floor(Date.now() / 1000)\n        /* eslint-enable camelcase */\n    });\n}\nfunction getEventType(messageType) {\n    switch (messageType) {\n        case MessageType.NOTIFICATION_CLICKED:\n            return 'notification_open';\n        case MessageType.PUSH_RECEIVED:\n            return 'notification_foreground';\n        default:\n            throw new Error();\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function messageEventListener(messaging, event) {\n    const internalPayload = event.data;\n    if (!internalPayload.isFirebaseMessaging) {\n        return;\n    }\n    if (messaging.onMessageHandler &&\n        internalPayload.messageType === MessageType.PUSH_RECEIVED) {\n        if (typeof messaging.onMessageHandler === 'function') {\n            messaging.onMessageHandler(externalizePayload(internalPayload));\n        }\n        else {\n            messaging.onMessageHandler.next(externalizePayload(internalPayload));\n        }\n    }\n    // Log to Scion if applicable\n    const dataPayload = internalPayload.data;\n    if (isConsoleMessage(dataPayload) &&\n        dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1') {\n        await logToScion(messaging, internalPayload.messageType, dataPayload);\n    }\n}\n\nconst name = \"@firebase/messaging\";\nconst version = \"0.12.18\";\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst WindowMessagingFactory = (container) => {\n    const messaging = new MessagingService(container.getProvider('app').getImmediate(), container.getProvider('installations-internal').getImmediate(), container.getProvider('analytics-internal'));\n    navigator.serviceWorker.addEventListener('message', e => messageEventListener(messaging, e));\n    return messaging;\n};\nconst WindowMessagingInternalFactory = (container) => {\n    const messaging = container\n        .getProvider('messaging')\n        .getImmediate();\n    const messagingInternal = {\n        getToken: (options) => getToken$1(messaging, options)\n    };\n    return messagingInternal;\n};\nfunction registerMessagingInWindow() {\n    _registerComponent(new Component('messaging', WindowMessagingFactory, \"PUBLIC\" /* ComponentType.PUBLIC */));\n    _registerComponent(new Component('messaging-internal', WindowMessagingInternalFactory, \"PRIVATE\" /* ComponentType.PRIVATE */));\n    registerVersion(name, version);\n    // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n    registerVersion(name, version, 'esm2017');\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Checks if all required APIs exist in the browser.\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nasync function isWindowSupported() {\n    try {\n        // This throws if open() is unsupported, so adding it to the conditional\n        // statement below can cause an uncaught error.\n        await validateIndexedDBOpenable();\n    }\n    catch (e) {\n        return false;\n    }\n    // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n    // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n    // instantiating phase, informing the developers to import/call isSupported for special handling.\n    return (typeof window !== 'undefined' &&\n        isIndexedDBAvailable() &&\n        areCookiesEnabled() &&\n        'serviceWorker' in navigator &&\n        'PushManager' in window &&\n        'Notification' in window &&\n        'fetch' in window &&\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n        PushSubscription.prototype.hasOwnProperty('getKey'));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function deleteToken$1(messaging) {\n    if (!navigator) {\n        throw ERROR_FACTORY.create(\"only-available-in-window\" /* ErrorCode.AVAILABLE_IN_WINDOW */);\n    }\n    if (!messaging.swRegistration) {\n        await registerDefaultSw(messaging);\n    }\n    return deleteTokenInternal(messaging);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction onMessage$1(messaging, nextOrObserver) {\n    if (!navigator) {\n        throw ERROR_FACTORY.create(\"only-available-in-window\" /* ErrorCode.AVAILABLE_IN_WINDOW */);\n    }\n    messaging.onMessageHandler = nextOrObserver;\n    return () => {\n        messaging.onMessageHandler = null;\n    };\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nfunction getMessagingInWindow(app = getApp()) {\n    // Conscious decision to make this async check non-blocking during the messaging instance\n    // initialization phase for performance consideration. An error would be thrown latter for\n    // developer's information. Developers can then choose to import and call `isSupported` for\n    // special handling.\n    isWindowSupported().then(isSupported => {\n        // If `isWindowSupported()` resolved, but returned false.\n        if (!isSupported) {\n            throw ERROR_FACTORY.create(\"unsupported-browser\" /* ErrorCode.UNSUPPORTED_BROWSER */);\n        }\n    }, _ => {\n        // If `isWindowSupported()` rejected.\n        throw ERROR_FACTORY.create(\"indexed-db-unsupported\" /* ErrorCode.INDEXED_DB_UNSUPPORTED */);\n    });\n    return _getProvider(getModularInstance(app), 'messaging').getImmediate();\n}\n/**\n * Subscribes the {@link Messaging} instance to push notifications. Returns a Firebase Cloud\n * Messaging registration token that can be used to send push messages to that {@link Messaging}\n * instance.\n *\n * If notification permission isn't already granted, this method asks the user for permission. The\n * returned promise rejects if the user does not allow the app to show notifications.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param options - Provides an optional vapid key and an optional service worker registration.\n *\n * @returns The promise resolves with an FCM registration token.\n *\n * @public\n */\nasync function getToken(messaging, options) {\n    messaging = getModularInstance(messaging);\n    return getToken$1(messaging, options);\n}\n/**\n * Deletes the registration token associated with this {@link Messaging} instance and unsubscribes\n * the {@link Messaging} instance from the push subscription.\n *\n * @param messaging - The {@link Messaging} instance.\n *\n * @returns The promise resolves when the token has been successfully deleted.\n *\n * @public\n */\nfunction deleteToken(messaging) {\n    messaging = getModularInstance(messaging);\n    return deleteToken$1(messaging);\n}\n/**\n * When a push message is received and the user is currently on a page for your origin, the\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\n * the push message.\n *\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined,\n *     is called when a message is received and the user is currently viewing your page.\n * @returns To stop listening for messages execute this returned function.\n *\n * @public\n */\nfunction onMessage(messaging, nextOrObserver) {\n    messaging = getModularInstance(messaging);\n    return onMessage$1(messaging, nextOrObserver);\n}\n\n/**\n * The Firebase Cloud Messaging Web SDK.\n * This SDK does not work in a Node.js environment.\n *\n * @packageDocumentation\n */\nregisterMessagingInWindow();\n\nexport { deleteToken, getMessagingInWindow as getMessaging, getToken, isWindowSupported as isSupported, onMessage };\n\n", "import { WebPlugin } from '@capacitor/core';\nimport { deleteToken, getMessaging, getToken, isSupported as isSupportedInWeb, onMessage, } from 'firebase/messaging';\nexport class FirebaseMessagingWeb extends WebPlugin {\n    constructor() {\n        super();\n        isSupportedInWeb().then(supported => {\n            if (!supported) {\n                return;\n            }\n            const messaging = getMessaging();\n            onMessage(messaging, payload => this.handleNotificationReceived(payload));\n        });\n    }\n    async checkPermissions() {\n        const isSupported = await isSupportedInWeb();\n        if (!isSupported) {\n            return {\n                receive: 'denied',\n            };\n        }\n        const receive = this.convertNotificationPermissionToPermissionState(Notification.permission);\n        return {\n            receive,\n        };\n    }\n    async requestPermissions() {\n        const isSupported = await isSupportedInWeb();\n        if (!isSupported) {\n            return {\n                receive: 'denied',\n            };\n        }\n        const notificationPermission = await Notification.requestPermission();\n        const receive = this.convertNotificationPermissionToPermissionState(notificationPermission);\n        return {\n            receive,\n        };\n    }\n    async isSupported() {\n        const isSupported = await isSupportedInWeb();\n        return {\n            isSupported,\n        };\n    }\n    async getToken(options) {\n        const messaging = getMessaging();\n        const token = await getToken(messaging, {\n            vapidKey: options.vapidKey,\n            serviceWorkerRegistration: options.serviceWorkerRegistration,\n        });\n        return {\n            token,\n        };\n    }\n    async deleteToken() {\n        const messaging = getMessaging();\n        await deleteToken(messaging);\n    }\n    async getDeliveredNotifications() {\n        this.throwUnavailableError();\n    }\n    async removeDeliveredNotifications(_options) {\n        this.throwUnavailableError();\n    }\n    async removeAllDeliveredNotifications() {\n        this.throwUnavailableError();\n    }\n    async subscribeToTopic(_options) {\n        this.throwUnavailableError();\n    }\n    async unsubscribeFromTopic(_options) {\n        this.throwUnavailableError();\n    }\n    async createChannel(_options) {\n        this.throwUnavailableError();\n    }\n    async deleteChannel(_options) {\n        this.throwUnavailableError();\n    }\n    async listChannels() {\n        this.throwUnavailableError();\n    }\n    handleNotificationReceived(messagePayload) {\n        const notification = this.createNotificationResult(messagePayload);\n        const event = {\n            notification,\n        };\n        this.notifyListeners(FirebaseMessagingWeb.notificationReceivedEvent, event);\n    }\n    createNotificationResult(messagePayload) {\n        var _a, _b, _c;\n        const notification = {\n            body: (_a = messagePayload.notification) === null || _a === void 0 ? void 0 : _a.body,\n            data: messagePayload.data,\n            id: messagePayload.messageId,\n            image: (_b = messagePayload.notification) === null || _b === void 0 ? void 0 : _b.image,\n            title: (_c = messagePayload.notification) === null || _c === void 0 ? void 0 : _c.title,\n        };\n        return notification;\n    }\n    convertNotificationPermissionToPermissionState(permission) {\n        let state = 'prompt';\n        switch (permission) {\n            case 'granted':\n                state = 'granted';\n                break;\n            case 'denied':\n                state = 'denied';\n                break;\n        }\n        return state;\n    }\n    throwUnavailableError() {\n        throw this.unavailable('Not available on web.');\n    }\n}\nFirebaseMessagingWeb.notificationReceivedEvent = 'notificationReceived';\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAM,kBAAkB;AACxB,IAAM,mBAAmB;AACzB,IAAM,oBAAoB;AAC1B,IAAM,WAAW;AACjB,IAAM,sBAAsB;AAC5B,IAAM,wBAAwB;AAC9B,IAAM,wBAAwB;AAE9B,IAAM,qCAAqC;AAC3C,IAAM,+BAA+B;AACrC,IAAI;AAAA,CACH,SAAUA,cAAa;AACpB,EAAAA,aAAYA,aAAY,cAAc,IAAI,CAAC,IAAI;AAC/C,EAAAA,aAAYA,aAAY,sBAAsB,IAAI,CAAC,IAAI;AAC3D,GAAG,kBAAkB,gBAAgB,CAAC,EAAE;AAgBxC,IAAI;AAAA,CACH,SAAUA,cAAa;AACpB,EAAAA,aAAY,eAAe,IAAI;AAC/B,EAAAA,aAAY,sBAAsB,IAAI;AAC1C,GAAG,gBAAgB,cAAc,CAAC,EAAE;AAkBpC,SAAS,cAAc,OAAO;AAC1B,QAAM,aAAa,IAAI,WAAW,KAAK;AACvC,QAAM,eAAe,KAAK,OAAO,aAAa,GAAG,UAAU,CAAC;AAC5D,SAAO,aAAa,QAAQ,MAAM,EAAE,EAAE,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,GAAG;AAChF;AACA,SAAS,cAAc,cAAc;AACjC,QAAM,UAAU,IAAI,QAAQ,IAAK,aAAa,SAAS,KAAM,CAAC;AAC9D,QAAM,UAAU,eAAe,SAC1B,QAAQ,OAAO,GAAG,EAClB,QAAQ,MAAM,GAAG;AACtB,QAAM,UAAU,KAAK,MAAM;AAC3B,QAAM,cAAc,IAAI,WAAW,QAAQ,MAAM;AACjD,WAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,EAAE,GAAG;AACrC,gBAAY,CAAC,IAAI,QAAQ,WAAW,CAAC;AAAA,EACzC;AACA,SAAO;AACX;AAkBA,IAAM,cAAc;AAKpB,IAAM,iBAAiB;AACvB,IAAM,wBAAwB;AAC9B,SAAe,mBAAmB,UAAU;AAAA;AACxC,QAAI,eAAe,WAAW;AAG1B,YAAM,YAAY,MAAM,UAAU,UAAU;AAC5C,YAAM,UAAU,UAAU,IAAI,CAAAC,QAAMA,IAAG,IAAI;AAC3C,UAAI,CAAC,QAAQ,SAAS,WAAW,GAAG;AAEhC,eAAO;AAAA,MACX;AAAA,IACJ;AACA,QAAI,eAAe;AACnB,UAAM,KAAK,MAAM,OAAO,aAAa,gBAAgB;AAAA,MACjD,SAAS,CAAOA,KAAI,YAAY,YAAY,uBAAuB;AAC/D,YAAI;AACJ,YAAI,aAAa,GAAG;AAEhB;AAAA,QACJ;AACA,YAAI,CAACA,IAAG,iBAAiB,SAAS,qBAAqB,GAAG;AAEtD;AAAA,QACJ;AACA,cAAM,cAAc,mBAAmB,YAAY,qBAAqB;AACxE,cAAM,QAAQ,MAAM,YAAY,MAAM,aAAa,EAAE,IAAI,QAAQ;AACjE,cAAM,YAAY,MAAM;AACxB,YAAI,CAAC,OAAO;AAER;AAAA,QACJ;AACA,YAAI,eAAe,GAAG;AAClB,gBAAM,aAAa;AACnB,cAAI,CAAC,WAAW,QAAQ,CAAC,WAAW,UAAU,CAAC,WAAW,UAAU;AAChE;AAAA,UACJ;AACA,yBAAe;AAAA,YACX,OAAO,WAAW;AAAA,YAClB,aAAa,KAAK,WAAW,gBAAgB,QAAQ,OAAO,SAAS,KAAK,KAAK,IAAI;AAAA,YACnF,qBAAqB;AAAA,cACjB,MAAM,WAAW;AAAA,cACjB,QAAQ,WAAW;AAAA,cACnB,UAAU,WAAW;AAAA,cACrB,SAAS,WAAW;AAAA,cACpB,UAAU,OAAO,WAAW,aAAa,WACnC,WAAW,WACX,cAAc,WAAW,QAAQ;AAAA,YAC3C;AAAA,UACJ;AAAA,QACJ,WACS,eAAe,GAAG;AACvB,gBAAM,aAAa;AACnB,yBAAe;AAAA,YACX,OAAO,WAAW;AAAA,YAClB,YAAY,WAAW;AAAA,YACvB,qBAAqB;AAAA,cACjB,MAAM,cAAc,WAAW,IAAI;AAAA,cACnC,QAAQ,cAAc,WAAW,MAAM;AAAA,cACvC,UAAU,WAAW;AAAA,cACrB,SAAS,WAAW;AAAA,cACpB,UAAU,cAAc,WAAW,QAAQ;AAAA,YAC/C;AAAA,UACJ;AAAA,QACJ,WACS,eAAe,GAAG;AACvB,gBAAM,aAAa;AACnB,yBAAe;AAAA,YACX,OAAO,WAAW;AAAA,YAClB,YAAY,WAAW;AAAA,YACvB,qBAAqB;AAAA,cACjB,MAAM,cAAc,WAAW,IAAI;AAAA,cACnC,QAAQ,cAAc,WAAW,MAAM;AAAA,cACvC,UAAU,WAAW;AAAA,cACrB,SAAS,WAAW;AAAA,cACpB,UAAU,cAAc,WAAW,QAAQ;AAAA,YAC/C;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ,CAAC;AACD,OAAG,MAAM;AAET,UAAM,SAAS,WAAW;AAC1B,UAAM,SAAS,sBAAsB;AACrC,UAAM,SAAS,WAAW;AAC1B,WAAO,kBAAkB,YAAY,IAAI,eAAe;AAAA,EAC5D;AAAA;AACA,SAAS,kBAAkB,cAAc;AACrC,MAAI,CAAC,gBAAgB,CAAC,aAAa,qBAAqB;AACpD,WAAO;AAAA,EACX;AACA,QAAM,EAAE,oBAAoB,IAAI;AAChC,SAAQ,OAAO,aAAa,eAAe,YACvC,aAAa,aAAa,KAC1B,OAAO,aAAa,UAAU,YAC9B,aAAa,MAAM,SAAS,KAC5B,OAAO,oBAAoB,SAAS,YACpC,oBAAoB,KAAK,SAAS,KAClC,OAAO,oBAAoB,WAAW,YACtC,oBAAoB,OAAO,SAAS,KACpC,OAAO,oBAAoB,aAAa,YACxC,oBAAoB,SAAS,SAAS,KACtC,OAAO,oBAAoB,YAAY,YACvC,oBAAoB,QAAQ,SAAS,KACrC,OAAO,oBAAoB,aAAa,YACxC,oBAAoB,SAAS,SAAS;AAC9C;AAmBA,IAAM,gBAAgB;AACtB,IAAM,mBAAmB;AACzB,IAAM,oBAAoB;AAC1B,IAAI,YAAY;AAChB,SAAS,eAAe;AACpB,MAAI,CAAC,WAAW;AACZ,gBAAY,OAAO,eAAe,kBAAkB;AAAA,MAChD,SAAS,CAAC,WAAW,eAAe;AAKhC,gBAAQ,YAAY;AAAA,UAChB,KAAK;AACD,sBAAU,kBAAkB,iBAAiB;AAAA,QACrD;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA,EACL;AACA,SAAO;AACX;AAEA,SAAe,MAAM,sBAAsB;AAAA;AACvC,UAAM,MAAM,OAAO,oBAAoB;AACvC,UAAM,KAAK,MAAM,aAAa;AAC9B,UAAM,eAAgB,MAAM,GACvB,YAAY,iBAAiB,EAC7B,YAAY,iBAAiB,EAC7B,IAAI,GAAG;AACZ,QAAI,cAAc;AACd,aAAO;AAAA,IACX,OACK;AAED,YAAM,kBAAkB,MAAM,mBAAmB,qBAAqB,UAAU,QAAQ;AACxF,UAAI,iBAAiB;AACjB,cAAM,MAAM,sBAAsB,eAAe;AACjD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AAAA;AAEA,SAAe,MAAM,sBAAsB,cAAc;AAAA;AACrD,UAAM,MAAM,OAAO,oBAAoB;AACvC,UAAM,KAAK,MAAM,aAAa;AAC9B,UAAM,KAAK,GAAG,YAAY,mBAAmB,WAAW;AACxD,UAAM,GAAG,YAAY,iBAAiB,EAAE,IAAI,cAAc,GAAG;AAC7D,UAAM,GAAG;AACT,WAAO;AAAA,EACX;AAAA;AAEA,SAAe,SAAS,sBAAsB;AAAA;AAC1C,UAAM,MAAM,OAAO,oBAAoB;AACvC,UAAM,KAAK,MAAM,aAAa;AAC9B,UAAM,KAAK,GAAG,YAAY,mBAAmB,WAAW;AACxD,UAAM,GAAG,YAAY,iBAAiB,EAAE,OAAO,GAAG;AAClD,UAAM,GAAG;AAAA,EACb;AAAA;AACA,SAAS,OAAO,EAAE,UAAU,GAAG;AAC3B,SAAO,UAAU;AACrB;AAkBA,IAAM,YAAY;AAAA,EACd;AAAA,IAAC;AAAA;AAAA,EAAqE,GAAG;AAAA,EACzE;AAAA,IAAC;AAAA;AAAA,EAA8D,GAAG;AAAA,EAClE;AAAA,IAAC;AAAA;AAAA,EAAsD,GAAG;AAAA,EAC1D;AAAA,IAAC;AAAA;AAAA,EAAuD,GAAG;AAAA,EAC3D;AAAA,IAAC;AAAA;AAAA,EAAuD,GAAG;AAAA,EAC3D;AAAA,IAAC;AAAA;AAAA,EAAyD,GAAG;AAAA,EAC7D;AAAA,IAAC;AAAA;AAAA,EAA+D,GAAG;AAAA,EACnE;AAAA,IAAC;AAAA;AAAA,EAAgF,GAAG;AAAA,EACpF;AAAA,IAAC;AAAA;AAAA,EAA+D,GAAG;AAAA,EACnE;AAAA,IAAC;AAAA;AAAA,EAAmE,GAAG;AAAA,EACvE;AAAA,IAAC;AAAA;AAAA,EAAmE,GAAG;AAAA,EAEvE;AAAA,IAAC;AAAA;AAAA,EAAyD,GAAG;AAAA,EAC7D;AAAA,IAAC;AAAA;AAAA,EAA6D,GAAG;AAAA,EACjE;AAAA,IAAC;AAAA;AAAA,EAA+D,GAAG;AAAA,EAEnE;AAAA,IAAC;AAAA;AAAA,EAAiE,GAAG;AAAA,EACrE;AAAA,IAAC;AAAA;AAAA,EAAuD,GAAG;AAAA,EAC3D;AAAA,IAAC;AAAA;AAAA,EAAqD,GAAG;AAAA,EACzD;AAAA,IAAC;AAAA;AAAA,EAA6E,GAAG;AAErF;AACA,IAAM,gBAAgB,IAAI,aAAa,aAAa,aAAa,SAAS;AAkB1E,SAAe,gBAAgB,sBAAsB,qBAAqB;AAAA;AACtE,UAAM,UAAU,MAAM,WAAW,oBAAoB;AACrD,UAAM,OAAO,QAAQ,mBAAmB;AACxC,UAAM,mBAAmB;AAAA,MACrB,QAAQ;AAAA,MACR;AAAA,MACA,MAAM,KAAK,UAAU,IAAI;AAAA,IAC7B;AACA,QAAI;AACJ,QAAI;AACA,YAAM,WAAW,MAAM,MAAM,YAAY,qBAAqB,SAAS,GAAG,gBAAgB;AAC1F,qBAAe,MAAM,SAAS,KAAK;AAAA,IACvC,SACO,KAAK;AACR,YAAM,cAAc,OAAO,0BAAiE;AAAA,QACxF,WAAW,QAAQ,QAAQ,QAAQ,SAAS,SAAS,IAAI,SAAS;AAAA,MACtE,CAAC;AAAA,IACL;AACA,QAAI,aAAa,OAAO;AACpB,YAAM,UAAU,aAAa,MAAM;AACnC,YAAM,cAAc,OAAO,0BAAiE;AAAA,QACxF,WAAW;AAAA,MACf,CAAC;AAAA,IACL;AACA,QAAI,CAAC,aAAa,OAAO;AACrB,YAAM,cAAc;AAAA,QAAO;AAAA;AAAA,MAAmE;AAAA,IAClG;AACA,WAAO,aAAa;AAAA,EACxB;AAAA;AACA,SAAe,mBAAmB,sBAAsB,cAAc;AAAA;AAClE,UAAM,UAAU,MAAM,WAAW,oBAAoB;AACrD,UAAM,OAAO,QAAQ,aAAa,mBAAmB;AACrD,UAAM,gBAAgB;AAAA,MAClB,QAAQ;AAAA,MACR;AAAA,MACA,MAAM,KAAK,UAAU,IAAI;AAAA,IAC7B;AACA,QAAI;AACJ,QAAI;AACA,YAAM,WAAW,MAAM,MAAM,GAAG,YAAY,qBAAqB,SAAS,CAAC,IAAI,aAAa,KAAK,IAAI,aAAa;AAClH,qBAAe,MAAM,SAAS,KAAK;AAAA,IACvC,SACO,KAAK;AACR,YAAM,cAAc,OAAO,uBAA2D;AAAA,QAClF,WAAW,QAAQ,QAAQ,QAAQ,SAAS,SAAS,IAAI,SAAS;AAAA,MACtE,CAAC;AAAA,IACL;AACA,QAAI,aAAa,OAAO;AACpB,YAAM,UAAU,aAAa,MAAM;AACnC,YAAM,cAAc,OAAO,uBAA2D;AAAA,QAClF,WAAW;AAAA,MACf,CAAC;AAAA,IACL;AACA,QAAI,CAAC,aAAa,OAAO;AACrB,YAAM,cAAc;AAAA,QAAO;AAAA;AAAA,MAA6D;AAAA,IAC5F;AACA,WAAO,aAAa;AAAA,EACxB;AAAA;AACA,SAAe,mBAAmB,sBAAsB,OAAO;AAAA;AAC3D,UAAM,UAAU,MAAM,WAAW,oBAAoB;AACrD,UAAM,qBAAqB;AAAA,MACvB,QAAQ;AAAA,MACR;AAAA,IACJ;AACA,QAAI;AACA,YAAM,WAAW,MAAM,MAAM,GAAG,YAAY,qBAAqB,SAAS,CAAC,IAAI,KAAK,IAAI,kBAAkB;AAC1G,YAAM,eAAe,MAAM,SAAS,KAAK;AACzC,UAAI,aAAa,OAAO;AACpB,cAAM,UAAU,aAAa,MAAM;AACnC,cAAM,cAAc,OAAO,4BAAqE;AAAA,UAC5F,WAAW;AAAA,QACf,CAAC;AAAA,MACL;AAAA,IACJ,SACO,KAAK;AACR,YAAM,cAAc,OAAO,4BAAqE;AAAA,QAC5F,WAAW,QAAQ,QAAQ,QAAQ,SAAS,SAAS,IAAI,SAAS;AAAA,MACtE,CAAC;AAAA,IACL;AAAA,EACJ;AAAA;AACA,SAAS,YAAY,EAAE,UAAU,GAAG;AAChC,SAAO,GAAG,QAAQ,aAAa,SAAS;AAC5C;AACA,SAAe,WAAW,IAA8B;AAAA,6CAA9B,EAAE,WAAW,cAAc,GAAG;AACpD,UAAM,YAAY,MAAM,cAAc,SAAS;AAC/C,WAAO,IAAI,QAAQ;AAAA,MACf,gBAAgB;AAAA,MAChB,QAAQ;AAAA,MACR,kBAAkB,UAAU;AAAA,MAC5B,sCAAsC,OAAO,SAAS;AAAA,IAC1D,CAAC;AAAA,EACL;AAAA;AACA,SAAS,QAAQ,EAAE,QAAQ,MAAM,UAAU,SAAS,GAAG;AACnD,QAAM,OAAO;AAAA,IACT,KAAK;AAAA,MACD;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AACA,MAAI,aAAa,mBAAmB;AAChC,SAAK,IAAI,oBAAoB;AAAA,EACjC;AACA,SAAO;AACX;AAmBA,IAAM,sBAAsB,IAAI,KAAK,KAAK,KAAK;AAC/C,SAAe,iBAAiB,WAAW;AAAA;AACvC,UAAM,mBAAmB,MAAM,oBAAoB,UAAU,gBAAgB,UAAU,QAAQ;AAC/F,UAAM,sBAAsB;AAAA,MACxB,UAAU,UAAU;AAAA,MACpB,SAAS,UAAU,eAAe;AAAA,MAClC,UAAU,iBAAiB;AAAA,MAC3B,MAAM,cAAc,iBAAiB,OAAO,MAAM,CAAC;AAAA,MACnD,QAAQ,cAAc,iBAAiB,OAAO,QAAQ,CAAC;AAAA,IAC3D;AACA,UAAM,eAAe,MAAM,MAAM,UAAU,oBAAoB;AAC/D,QAAI,CAAC,cAAc;AAEf,aAAO,YAAY,UAAU,sBAAsB,mBAAmB;AAAA,IAC1E,WACS,CAAC,aAAa,aAAa,qBAAqB,mBAAmB,GAAG;AAE3E,UAAI;AACA,cAAM,mBAAmB,UAAU,sBAAsB,aAAa,KAAK;AAAA,MAC/E,SACO,GAAG;AAEN,gBAAQ,KAAK,CAAC;AAAA,MAClB;AACA,aAAO,YAAY,UAAU,sBAAsB,mBAAmB;AAAA,IAC1E,WACS,KAAK,IAAI,KAAK,aAAa,aAAa,qBAAqB;AAElE,aAAO,YAAY,WAAW;AAAA,QAC1B,OAAO,aAAa;AAAA,QACpB,YAAY,KAAK,IAAI;AAAA,QACrB;AAAA,MACJ,CAAC;AAAA,IACL,OACK;AAED,aAAO,aAAa;AAAA,IACxB;AAAA,EACJ;AAAA;AAKA,SAAe,oBAAoB,WAAW;AAAA;AAC1C,UAAM,eAAe,MAAM,MAAM,UAAU,oBAAoB;AAC/D,QAAI,cAAc;AACd,YAAM,mBAAmB,UAAU,sBAAsB,aAAa,KAAK;AAC3E,YAAM,SAAS,UAAU,oBAAoB;AAAA,IACjD;AAEA,UAAM,mBAAmB,MAAM,UAAU,eAAe,YAAY,gBAAgB;AACpF,QAAI,kBAAkB;AAClB,aAAO,iBAAiB,YAAY;AAAA,IACxC;AAEA,WAAO;AAAA,EACX;AAAA;AACA,SAAe,YAAY,WAAW,cAAc;AAAA;AAChD,QAAI;AACA,YAAM,eAAe,MAAM,mBAAmB,UAAU,sBAAsB,YAAY;AAC1F,YAAM,sBAAsB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,YAAY,GAAG,EAAE,OAAO,cAAc,YAAY,KAAK,IAAI,EAAE,CAAC;AAC1H,YAAM,MAAM,UAAU,sBAAsB,mBAAmB;AAC/D,aAAO;AAAA,IACX,SACO,GAAG;AACN,YAAM;AAAA,IACV;AAAA,EACJ;AAAA;AACA,SAAe,YAAY,sBAAsB,qBAAqB;AAAA;AAClE,UAAM,QAAQ,MAAM,gBAAgB,sBAAsB,mBAAmB;AAC7E,UAAM,eAAe;AAAA,MACjB;AAAA,MACA,YAAY,KAAK,IAAI;AAAA,MACrB;AAAA,IACJ;AACA,UAAM,MAAM,sBAAsB,YAAY;AAC9C,WAAO,aAAa;AAAA,EACxB;AAAA;AAIA,SAAe,oBAAoB,gBAAgB,UAAU;AAAA;AACzD,UAAM,eAAe,MAAM,eAAe,YAAY,gBAAgB;AACtE,QAAI,cAAc;AACd,aAAO;AAAA,IACX;AACA,WAAO,eAAe,YAAY,UAAU;AAAA,MACxC,iBAAiB;AAAA;AAAA;AAAA,MAGjB,sBAAsB,cAAc,QAAQ;AAAA,IAChD,CAAC;AAAA,EACL;AAAA;AAIA,SAAS,aAAa,WAAW,gBAAgB;AAC7C,QAAM,kBAAkB,eAAe,aAAa,UAAU;AAC9D,QAAM,kBAAkB,eAAe,aAAa,UAAU;AAC9D,QAAM,cAAc,eAAe,SAAS,UAAU;AACtD,QAAM,gBAAgB,eAAe,WAAW,UAAU;AAC1D,SAAO,mBAAmB,mBAAmB,eAAe;AAChE;AAkBA,SAAS,mBAAmB,iBAAiB;AACzC,QAAM,UAAU;AAAA,IACZ,MAAM,gBAAgB;AAAA;AAAA,IAEtB,aAAa,gBAAgB;AAAA;AAAA,IAE7B,WAAW,gBAAgB;AAAA,EAC/B;AACA,+BAA6B,SAAS,eAAe;AACrD,uBAAqB,SAAS,eAAe;AAC7C,sBAAoB,SAAS,eAAe;AAC5C,SAAO;AACX;AACA,SAAS,6BAA6B,SAAS,wBAAwB;AACnE,MAAI,CAAC,uBAAuB,cAAc;AACtC;AAAA,EACJ;AACA,UAAQ,eAAe,CAAC;AACxB,QAAM,QAAQ,uBAAuB,aAAa;AAClD,MAAI,CAAC,CAAC,OAAO;AACT,YAAQ,aAAa,QAAQ;AAAA,EACjC;AACA,QAAM,OAAO,uBAAuB,aAAa;AACjD,MAAI,CAAC,CAAC,MAAM;AACR,YAAQ,aAAa,OAAO;AAAA,EAChC;AACA,QAAM,QAAQ,uBAAuB,aAAa;AAClD,MAAI,CAAC,CAAC,OAAO;AACT,YAAQ,aAAa,QAAQ;AAAA,EACjC;AACA,QAAM,OAAO,uBAAuB,aAAa;AACjD,MAAI,CAAC,CAAC,MAAM;AACR,YAAQ,aAAa,OAAO;AAAA,EAChC;AACJ;AACA,SAAS,qBAAqB,SAAS,wBAAwB;AAC3D,MAAI,CAAC,uBAAuB,MAAM;AAC9B;AAAA,EACJ;AACA,UAAQ,OAAO,uBAAuB;AAC1C;AACA,SAAS,oBAAoB,SAAS,wBAAwB;AAC1D,MAAI,IAAI,IAAI,IAAI,IAAI;AAEpB,MAAI,CAAC,uBAAuB,cACxB,GAAG,KAAK,uBAAuB,kBAAkB,QAAQ,OAAO,SAAS,SAAS,GAAG,eAAe;AACpG;AAAA,EACJ;AACA,UAAQ,aAAa,CAAC;AACtB,QAAM,QAAQ,MAAM,KAAK,uBAAuB,gBAAgB,QAAQ,OAAO,SAAS,SAAS,GAAG,UAAU,QAAQ,OAAO,SAAS,MAAM,KAAK,uBAAuB,kBAAkB,QAAQ,OAAO,SAAS,SAAS,GAAG;AAC9N,MAAI,CAAC,CAAC,MAAM;AACR,YAAQ,WAAW,OAAO;AAAA,EAC9B;AAEA,QAAM,kBAAkB,KAAK,uBAAuB,gBAAgB,QAAQ,OAAO,SAAS,SAAS,GAAG;AACxG,MAAI,CAAC,CAAC,gBAAgB;AAClB,YAAQ,WAAW,iBAAiB;AAAA,EACxC;AACJ;AAkBA,SAAS,iBAAiB,MAAM;AAE5B,SAAO,OAAO,SAAS,YAAY,CAAC,CAAC,QAAQ,uBAAuB;AACxE;AAkBA,cAAc,wBAAwB,qBAAqB;AAC3D,SAAS,cAAc,IAAI,IAAI;AAC3B,QAAM,cAAc,CAAC;AACrB,WAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,KAAK;AAChC,gBAAY,KAAK,GAAG,OAAO,CAAC,CAAC;AAC7B,QAAI,IAAI,GAAG,QAAQ;AACf,kBAAY,KAAK,GAAG,OAAO,CAAC,CAAC;AAAA,IACjC;AAAA,EACJ;AACA,SAAO,YAAY,KAAK,EAAE;AAC9B;AAkBA,SAAS,iBAAiB,KAAK;AAC3B,MAAI,CAAC,OAAO,CAAC,IAAI,SAAS;AACtB,UAAM,qBAAqB,0BAA0B;AAAA,EACzD;AACA,MAAI,CAAC,IAAI,MAAM;AACX,UAAM,qBAAqB,UAAU;AAAA,EACzC;AAEA,QAAM,aAAa;AAAA,IACf;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AACA,QAAM,EAAE,QAAQ,IAAI;AACpB,aAAW,WAAW,YAAY;AAC9B,QAAI,CAAC,QAAQ,OAAO,GAAG;AACnB,YAAM,qBAAqB,OAAO;AAAA,IACtC;AAAA,EACJ;AACA,SAAO;AAAA,IACH,SAAS,IAAI;AAAA,IACb,WAAW,QAAQ;AAAA,IACnB,QAAQ,QAAQ;AAAA,IAChB,OAAO,QAAQ;AAAA,IACf,UAAU,QAAQ;AAAA,EACtB;AACJ;AACA,SAAS,qBAAqB,WAAW;AACrC,SAAO,cAAc,OAAO,6BAAuE;AAAA,IAC/F;AAAA,EACJ,CAAC;AACL;AAkBA,IAAM,mBAAN,MAAuB;AAAA,EACnB,YAAY,KAAK,eAAe,mBAAmB;AAE/C,SAAK,2CAA2C;AAChD,SAAK,6BAA6B;AAClC,SAAK,mBAAmB;AACxB,SAAK,YAAY,CAAC;AAClB,SAAK,sBAAsB;AAC3B,UAAM,YAAY,iBAAiB,GAAG;AACtC,SAAK,uBAAuB;AAAA,MACxB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,UAAU;AACN,WAAO,QAAQ,QAAQ;AAAA,EAC3B;AACJ;AAkBA,SAAe,kBAAkB,WAAW;AAAA;AACxC,QAAI;AACA,gBAAU,iBAAiB,MAAM,UAAU,cAAc,SAAS,iBAAiB;AAAA,QAC/E,OAAO;AAAA,MACX,CAAC;AAMD,gBAAU,eAAe,OAAO,EAAE,MAAM,MAAM;AAAA,MAE9C,CAAC;AACD,YAAM,0BAA0B,UAAU,cAAc;AAAA,IAC5D,SACO,GAAG;AACN,YAAM,cAAc,OAAO,sCAAkF;AAAA,QACzG,qBAAqB,MAAM,QAAQ,MAAM,SAAS,SAAS,EAAE;AAAA,MACjE,CAAC;AAAA,IACL;AAAA,EACJ;AAAA;AAUA,SAAe,0BAA0B,cAAc;AAAA;AACnD,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,YAAM,gBAAgB,WAAW,MAAM,OAAO,IAAI,MAAM,uCAAuC,4BAA4B,KAAK,CAAC,GAAG,4BAA4B;AAChK,YAAM,aAAa,aAAa,cAAc,aAAa;AAC3D,UAAI,aAAa,QAAQ;AACrB,qBAAa,aAAa;AAC1B,gBAAQ;AAAA,MACZ,WACS,YAAY;AACjB,mBAAW,gBAAgB,QAAM;AAC7B,cAAI;AACJ,gBAAM,KAAK,GAAG,YAAY,QAAQ,OAAO,SAAS,SAAS,GAAG,WAAW,aAAa;AAClF,uBAAW,gBAAgB;AAC3B,yBAAa,aAAa;AAC1B,oBAAQ;AAAA,UACZ;AAAA,QACJ;AAAA,MACJ,OACK;AACD,qBAAa,aAAa;AAC1B,eAAO,IAAI,MAAM,mCAAmC,CAAC;AAAA,MACzD;AAAA,IACJ,CAAC;AAAA,EACL;AAAA;AAkBA,SAAe,YAAY,WAAW,gBAAgB;AAAA;AAClD,QAAI,CAAC,kBAAkB,CAAC,UAAU,gBAAgB;AAC9C,YAAM,kBAAkB,SAAS;AAAA,IACrC;AACA,QAAI,CAAC,kBAAkB,CAAC,CAAC,UAAU,gBAAgB;AAC/C;AAAA,IACJ;AACA,QAAI,EAAE,0BAA0B,4BAA4B;AACxD,YAAM,cAAc;AAAA,QAAO;AAAA;AAAA,MAAiE;AAAA,IAChG;AACA,cAAU,iBAAiB;AAAA,EAC/B;AAAA;AAkBA,SAAe,eAAe,WAAW,UAAU;AAAA;AAC/C,QAAI,CAAC,CAAC,UAAU;AACZ,gBAAU,WAAW;AAAA,IACzB,WACS,CAAC,UAAU,UAAU;AAC1B,gBAAU,WAAW;AAAA,IACzB;AAAA,EACJ;AAAA;AAkBA,SAAe,WAAW,WAAW,SAAS;AAAA;AAC1C,QAAI,CAAC,WAAW;AACZ,YAAM,cAAc;AAAA,QAAO;AAAA;AAAA,MAA8D;AAAA,IAC7F;AACA,QAAI,aAAa,eAAe,WAAW;AACvC,YAAM,aAAa,kBAAkB;AAAA,IACzC;AACA,QAAI,aAAa,eAAe,WAAW;AACvC,YAAM,cAAc;AAAA,QAAO;AAAA;AAAA,MAAuD;AAAA,IACtF;AACA,UAAM,eAAe,WAAW,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,QAAQ;AAClG,UAAM,YAAY,WAAW,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,yBAAyB;AAChH,WAAO,iBAAiB,SAAS;AAAA,EACrC;AAAA;AAkBA,SAAe,WAAW,WAAW,aAAa,MAAM;AAAA;AACpD,UAAM,YAAY,aAAa,WAAW;AAC1C,UAAM,YAAY,MAAM,UAAU,qBAAqB,kBAAkB,IAAI;AAC7E,cAAU,SAAS,WAAW;AAAA;AAAA,MAE1B,YAAY,KAAK,mBAAmB;AAAA,MACpC,cAAc,KAAK,qBAAqB;AAAA,MACxC,cAAc,KAAK,qBAAqB;AAAA,MACxC,qBAAqB,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI;AAAA;AAAA,IAErD,CAAC;AAAA,EACL;AAAA;AACA,SAAS,aAAa,aAAa;AAC/B,UAAQ,aAAa;AAAA,IACjB,KAAK,YAAY;AACb,aAAO;AAAA,IACX,KAAK,YAAY;AACb,aAAO;AAAA,IACX;AACI,YAAM,IAAI,MAAM;AAAA,EACxB;AACJ;AAkBA,SAAe,qBAAqB,WAAW,OAAO;AAAA;AAClD,UAAM,kBAAkB,MAAM;AAC9B,QAAI,CAAC,gBAAgB,qBAAqB;AACtC;AAAA,IACJ;AACA,QAAI,UAAU,oBACV,gBAAgB,gBAAgB,YAAY,eAAe;AAC3D,UAAI,OAAO,UAAU,qBAAqB,YAAY;AAClD,kBAAU,iBAAiB,mBAAmB,eAAe,CAAC;AAAA,MAClE,OACK;AACD,kBAAU,iBAAiB,KAAK,mBAAmB,eAAe,CAAC;AAAA,MACvE;AAAA,IACJ;AAEA,UAAM,cAAc,gBAAgB;AACpC,QAAI,iBAAiB,WAAW,KAC5B,YAAY,kCAAkC,MAAM,KAAK;AACzD,YAAM,WAAW,WAAW,gBAAgB,aAAa,WAAW;AAAA,IACxE;AAAA,EACJ;AAAA;AAEA,IAAM,OAAO;AACb,IAAM,UAAU;AAkBhB,IAAM,yBAAyB,CAAC,cAAc;AAC1C,QAAM,YAAY,IAAI,iBAAiB,UAAU,YAAY,KAAK,EAAE,aAAa,GAAG,UAAU,YAAY,wBAAwB,EAAE,aAAa,GAAG,UAAU,YAAY,oBAAoB,CAAC;AAC/L,YAAU,cAAc,iBAAiB,WAAW,OAAK,qBAAqB,WAAW,CAAC,CAAC;AAC3F,SAAO;AACX;AACA,IAAM,iCAAiC,CAAC,cAAc;AAClD,QAAM,YAAY,UACb,YAAY,WAAW,EACvB,aAAa;AAClB,QAAM,oBAAoB;AAAA,IACtB,UAAU,CAAC,YAAY,WAAW,WAAW,OAAO;AAAA,EACxD;AACA,SAAO;AACX;AACA,SAAS,4BAA4B;AACjC,qBAAmB,IAAI;AAAA,IAAU;AAAA,IAAa;AAAA,IAAwB;AAAA;AAAA,EAAmC,CAAC;AAC1G,qBAAmB,IAAI;AAAA,IAAU;AAAA,IAAsB;AAAA,IAAgC;AAAA;AAAA,EAAqC,CAAC;AAC7H,kBAAgB,MAAM,OAAO;AAE7B,kBAAgB,MAAM,SAAS,SAAS;AAC5C;AAwBA,SAAe,oBAAoB;AAAA;AAC/B,QAAI;AAGA,YAAM,0BAA0B;AAAA,IACpC,SACO,GAAG;AACN,aAAO;AAAA,IACX;AAIA,WAAQ,OAAO,WAAW,eACtB,qBAAqB,KACrB,kBAAkB,KAClB,mBAAmB,aACnB,iBAAiB,UACjB,kBAAkB,UAClB,WAAW,UACX,0BAA0B,UAAU,eAAe,kBAAkB,KACrE,iBAAiB,UAAU,eAAe,QAAQ;AAAA,EAC1D;AAAA;AAkBA,SAAe,cAAc,WAAW;AAAA;AACpC,QAAI,CAAC,WAAW;AACZ,YAAM,cAAc;AAAA,QAAO;AAAA;AAAA,MAA8D;AAAA,IAC7F;AACA,QAAI,CAAC,UAAU,gBAAgB;AAC3B,YAAM,kBAAkB,SAAS;AAAA,IACrC;AACA,WAAO,oBAAoB,SAAS;AAAA,EACxC;AAAA;AAkBA,SAAS,YAAY,WAAW,gBAAgB;AAC5C,MAAI,CAAC,WAAW;AACZ,UAAM,cAAc;AAAA,MAAO;AAAA;AAAA,IAA8D;AAAA,EAC7F;AACA,YAAU,mBAAmB;AAC7B,SAAO,MAAM;AACT,cAAU,mBAAmB;AAAA,EACjC;AACJ;AAyBA,SAAS,qBAAqB,MAAM,OAAO,GAAG;AAK1C,oBAAkB,EAAE,KAAK,iBAAe;AAEpC,QAAI,CAAC,aAAa;AACd,YAAM,cAAc;AAAA,QAAO;AAAA;AAAA,MAAyD;AAAA,IACxF;AAAA,EACJ,GAAG,OAAK;AAEJ,UAAM,cAAc;AAAA,MAAO;AAAA;AAAA,IAA+D;AAAA,EAC9F,CAAC;AACD,SAAO,aAAa,mBAAmB,GAAG,GAAG,WAAW,EAAE,aAAa;AAC3E;AAgBA,SAAe,SAAS,WAAW,SAAS;AAAA;AACxC,gBAAY,mBAAmB,SAAS;AACxC,WAAO,WAAW,WAAW,OAAO;AAAA,EACxC;AAAA;AAWA,SAAS,YAAY,WAAW;AAC5B,cAAY,mBAAmB,SAAS;AACxC,SAAO,cAAc,SAAS;AAClC;AAcA,SAAS,UAAU,WAAW,gBAAgB;AAC1C,cAAY,mBAAmB,SAAS;AACxC,SAAO,YAAY,WAAW,cAAc;AAChD;AAQA,0BAA0B;;;AC9uCnB,IAAM,uBAAN,MAAM,8BAA6B,UAAU;AAAA,EAChD,cAAc;AACV,UAAM;AACN,sBAAiB,EAAE,KAAK,eAAa;AACjC,UAAI,CAAC,WAAW;AACZ;AAAA,MACJ;AACA,YAAM,YAAY,qBAAa;AAC/B,gBAAU,WAAW,aAAW,KAAK,2BAA2B,OAAO,CAAC;AAAA,IAC5E,CAAC;AAAA,EACL;AAAA,EACM,mBAAmB;AAAA;AACrB,YAAM,cAAc,MAAM,kBAAiB;AAC3C,UAAI,CAAC,aAAa;AACd,eAAO;AAAA,UACH,SAAS;AAAA,QACb;AAAA,MACJ;AACA,YAAM,UAAU,KAAK,+CAA+C,aAAa,UAAU;AAC3F,aAAO;AAAA,QACH;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA,EACM,qBAAqB;AAAA;AACvB,YAAM,cAAc,MAAM,kBAAiB;AAC3C,UAAI,CAAC,aAAa;AACd,eAAO;AAAA,UACH,SAAS;AAAA,QACb;AAAA,MACJ;AACA,YAAM,yBAAyB,MAAM,aAAa,kBAAkB;AACpE,YAAM,UAAU,KAAK,+CAA+C,sBAAsB;AAC1F,aAAO;AAAA,QACH;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA,EACM,cAAc;AAAA;AAChB,YAAM,cAAc,MAAM,kBAAiB;AAC3C,aAAO;AAAA,QACH;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA,EACM,SAAS,SAAS;AAAA;AACpB,YAAM,YAAY,qBAAa;AAC/B,YAAM,QAAQ,MAAM,SAAS,WAAW;AAAA,QACpC,UAAU,QAAQ;AAAA,QAClB,2BAA2B,QAAQ;AAAA,MACvC,CAAC;AACD,aAAO;AAAA,QACH;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA,EACM,cAAc;AAAA;AAChB,YAAM,YAAY,qBAAa;AAC/B,YAAM,YAAY,SAAS;AAAA,IAC/B;AAAA;AAAA,EACM,4BAA4B;AAAA;AAC9B,WAAK,sBAAsB;AAAA,IAC/B;AAAA;AAAA,EACM,6BAA6B,UAAU;AAAA;AACzC,WAAK,sBAAsB;AAAA,IAC/B;AAAA;AAAA,EACM,kCAAkC;AAAA;AACpC,WAAK,sBAAsB;AAAA,IAC/B;AAAA;AAAA,EACM,iBAAiB,UAAU;AAAA;AAC7B,WAAK,sBAAsB;AAAA,IAC/B;AAAA;AAAA,EACM,qBAAqB,UAAU;AAAA;AACjC,WAAK,sBAAsB;AAAA,IAC/B;AAAA;AAAA,EACM,cAAc,UAAU;AAAA;AAC1B,WAAK,sBAAsB;AAAA,IAC/B;AAAA;AAAA,EACM,cAAc,UAAU;AAAA;AAC1B,WAAK,sBAAsB;AAAA,IAC/B;AAAA;AAAA,EACM,eAAe;AAAA;AACjB,WAAK,sBAAsB;AAAA,IAC/B;AAAA;AAAA,EACA,2BAA2B,gBAAgB;AACvC,UAAM,eAAe,KAAK,yBAAyB,cAAc;AACjE,UAAM,QAAQ;AAAA,MACV;AAAA,IACJ;AACA,SAAK,gBAAgB,sBAAqB,2BAA2B,KAAK;AAAA,EAC9E;AAAA,EACA,yBAAyB,gBAAgB;AACrC,QAAI,IAAI,IAAI;AACZ,UAAM,eAAe;AAAA,MACjB,OAAO,KAAK,eAAe,kBAAkB,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,MACjF,MAAM,eAAe;AAAA,MACrB,IAAI,eAAe;AAAA,MACnB,QAAQ,KAAK,eAAe,kBAAkB,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,MAClF,QAAQ,KAAK,eAAe,kBAAkB,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,IACtF;AACA,WAAO;AAAA,EACX;AAAA,EACA,+CAA+C,YAAY;AACvD,QAAI,QAAQ;AACZ,YAAQ,YAAY;AAAA,MAChB,KAAK;AACD,gBAAQ;AACR;AAAA,MACJ,KAAK;AACD,gBAAQ;AACR;AAAA,IACR;AACA,WAAO;AAAA,EACX;AAAA,EACA,wBAAwB;AACpB,UAAM,KAAK,YAAY,uBAAuB;AAAA,EAClD;AACJ;AACA,qBAAqB,4BAA4B;",
  "names": ["MessageType", "db"]
}
